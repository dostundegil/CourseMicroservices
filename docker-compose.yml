version: "3.8"
services:
  catalogdb:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - catalogdb_volume:/data/db
  basketdb:
    image: redis
    restart: always
    ports:
      - "6379:6379"
  discount:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - discount_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=kaan2000sv
      - POSTGRES_DB=discountdb
  identitydb:
    image: mcr.microsoft.com/mssql/server
    restart: always
    user: root
    ports:
      - "1433:1433"
    volumes:
      - identitydb_volume:/var/opt/mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=kaan2000sv
  orderdb:
    image: mcr.microsoft.com/mssql/server
    restart: always
    user: root
    ports:
      - "1444:1444"
    volumes:
      - orderdb_volume:/var/opt/mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=kaan2000sv
  rabbitmq:
    image: rabbitmq:3.8.14-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
  catalog.api:
    image: catalog_api_image
    build: 
      context: .
      dockerfile: Services/Catalog/FreeCourse.Services.Catalog/Dockerfile
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQUrl:rabbitmq
      - IdentityServerURL:http://identityserver.api:5001
      - DatabaseSettings:ConnectionString=mongodb://catalogdb:27017
    ports:
      - "5011:80"
    depends_on:
      - catalogdb
  identityserver.api:
    image: identityserver_api_image
    build: 
      context: .
      dockerfile: IdentityServer/FreeCourse.IdentityServer/Dockerfile
    container_name: identityserver.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:DefaultConnection=Server=identitydb,1433;Database=IdentityDb;User=sa;Password=kaan2000sv"
    ports:
      - "5001:80"
    depends_on:
      - identitydb
  basket.api:
    image: basket_api_image
    build: 
      context: .
      dockerfile: Services/Basket/FreeCourse.Services.Basket/Dockerfile
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityServerURL:http://identityserver.api:5001
      - RedisSettings:Port=6379
      - RedisSettings:basketdb
    ports:
      - "5013:80"
    depends_on:
      - basketdb
  photostock.api:
    image: photostock_api_image
    build: 
      context: .
      dockerfile: Services/PhotoStock/FreeCourse.Services.PhotoStock/Dockerfile
    container_name: photostock.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityServerURL:http://identityserver.api:5001
    ports:
      - "5012:80"
    volumes: 
      - type: bind
        source: C:\Users\User\Desktop\photos
        target: /app/wwwroot/photos



volumes:
  catalogdb_volume:
  discount_volume:
  identitydb_volume:
  orderdb_volume: